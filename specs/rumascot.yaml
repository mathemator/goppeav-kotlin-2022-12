openapi: 3.0.4
info:
  title: Сервис ruMascot - OpenAPI 3.0
  description: >-
    Спецификация площадки для размещения объявлений о покупке\продаже фигурок 
    и эскизов на основе OpenAPI 3.0. 
    
    [https://swagger.io](https://swagger.io)

  termsOfService: http://swagger.io/terms/
  contact:
    email: mathemator@yandex.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: ad
    description: Объявление (о покупке или продаже\предложении услуги)
paths:
  /ad/create:
    post:
      tags:
        - ad
      summary: Создать объявление
      operationId: adCreate
      requestBody:
        description: Тело запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdCreateRequest'
        required: true
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdCreateResponse'
  /ad/read:
    post:
      tags:
        - ad
      summary: Получить объявление
      operationId: adRead
      requestBody:
        description: Тело запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdReadRequest'
        required: true
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdReadResponse'
  /ad/update:
    post:
      tags:
        - ad
      summary: Обновить объявление
      operationId: adUpdate
      requestBody:
        description: Тело запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdUpdateRequest'
        required: true
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdUpdateResponse'
  /ad/delete:
    post:
      tags:
        - ad
      summary: Удалить объявление
      operationId: adDelete
      requestBody:
        description: Тело запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdDeleteRequest'
        required: true
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdDeleteResponse'
  /ad/search:
    post:
      tags:
        - ad
      summary: Искать объявление
      operationId: adSearch
      requestBody:
        description: Тело запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdSearchRequest'
        required: true
      responses:
        200:
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdSearchResponse'

components:
  schemas:

    IRequest:
      type: object
      description: Базовый интерфейс для всех запросов, содержит технические данные
      properties:
        requestType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/AdCreateRequest'
          read:   '#/components/schemas/AdReadRequest'
          update: '#/components/schemas/AdUpdateRequest'
          delete: '#/components/schemas/AdDeleteRequest'
          search: '#/components/schemas/AdSearchRequest'
          init: '#/components/schemas/AdInitResponse'

    Error:
      type: object
      description: Ошибка обращения к сервису
      properties:
        code:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      description: 'Результат обращения к сервису: успех/ошибка'
      enum:
        - success
        - error

    IResponse:
      type: object
      description: Базовый интерфейс для всех ответов, содержит технические данные
      properties:
        responseType:
          type: string
          description: Поле-дескриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: '#/components/schemas/ResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/AdCreateResponse'
          read:   '#/components/schemas/AdReadResponse'
          update: '#/components/schemas/AdUpdateResponse'
          delete: '#/components/schemas/AdDeleteResponse'
          search: '#/components/schemas/AdSearchResponse'
          init: '#/components/schemas/AdInitResponse'

    UserId:
      type: integer
      format: int64
      description: Идентификатор пользователя
    AdId:
      type: string
      description: Идентификатор объявления
    AdLock:
      type: string
      description: Версия оптимистичной блокировки

    BaseAd:
      type: object
      description: Объявление, данные об объявлении
      properties:
        id:
          $ref: '#/components/schemas/AdId'
        title:
          type: string
          description: Наименование товара\услуги
          example: Фигурка Дюка
        description:
          type: string
          example: Выполнена из дерева, покрыта краской и лаком
        ownerId:
          $ref: '#/components/schemas/UserId'
        tags:
          type: array
          description: метки объявления, служащие для сортировки и поиска, список
          items:
            $ref: '#/components/schemas/Tag'
        dealSide:
          $ref: '#/components/schemas/DealSide'
        visibility:
          $ref: '#/components/schemas/AdVisibility'

    AdVisibility:
      type: string
      description: 'Тип видимости объявления. Возможные значения: видит только владелец, только зарегистрированный в системе пользователь, видимо всем'
      enum:
        - registeredOnly
        - public

    Tag:
      type: object
      description: метка объявления, служащая для сортировки и поиска
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    DealSide:
      type: string
      description: 'Сторона сделки: спрос или предложение'
      enum:
        - demand
        - proposal

    AdCreateObject:
      description: тело запроса на создание объявления
      allOf:
        - $ref: '#/components/schemas/BaseAd'

    AdCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          description: запрос на создание объявления
          properties:
            ad:
              $ref: '#/components/schemas/AdCreateObject'

    AdReadObject:
      allOf:
        - type: object
          description: тело запроса на получение объявления
          properties:
            id:
              $ref: '#/components/schemas/AdId'

    AdReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          description: запрос на создание объявления
          properties:
            ad:
              $ref: '#/components/schemas/AdReadObject'

    AdUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseAd'
        - type: object
          description: тело запроса на обновление объявления
          properties:
            id:
              $ref: '#/components/schemas/AdId'
            lock:
              $ref: '#/components/schemas/AdLock'

    AdUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          description: запрос на обновление объявления
          properties:
            ad:
              $ref: '#/components/schemas/AdUpdateObject'

    AdDeleteObject:
      allOf:
        - type: object
          description: тело запроса на удаление объявления
          properties:
            id:
              $ref: '#/components/schemas/AdId'
            lock:
              $ref: '#/components/schemas/AdLock'

    AdDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          description: запрос на получение объявления
          properties:
            ad:
              $ref: '#/components/schemas/AdDeleteObject'

    AdSearchFilter:
      type: object
      description: Строка поиска
      properties:
        searchString:
          type: string
          description: Поисковая строка, которая будет использована для поиска объявлений

    AdSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/AdRequestDebug'
        - type: object
          description: запрос на поиск объявления
          properties:
            adFilter:
              $ref: '#/components/schemas/AdSearchFilter'

    AdResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseAd'
        - type: object
          description: Объект, который возвращается в ответе бэкенда
          properties:
            lock:
              $ref: '#/components/schemas/AdLock'
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/AdPermissions'

    AdPermissions:
      type: string
      description: Доступы для клиента для операций над объявлением
      enum:
        - read
        - update
        - delete
        - makeVisiblePublic
        - makeVisibleOwn
        - makeVisibleGroup

    AdInitResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'

    AdResponseSingle:
      allOf:
        - type: object
          description: Ответ с одним объектом объявления
          properties:
            ad:
              $ref: '#/components/schemas/AdResponseObject'

    AdResponseMulti:
      allOf:
        - type: object
          description: Ответ с множеством объектов
          properties:
            ads:
              type: array
              items:
                $ref: '#/components/schemas/AdResponseObject'

    AdCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseSingle'

    AdSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/AdResponseMulti'

    # STUBS ======================
    AdRequestDebugMode:
      type: string
      description: режим отладки
      enum:
        - prod
        - test
        - stub

    AdRequestDebug:
      type: object
      description: элемент запроса с информацией об отладке
      properties:
        debug:
          $ref: '#/components/schemas/AdDebug'

    AdDebug:
      type: object
      description: информация об отладке
      properties:
        mode:
          $ref: '#/components/schemas/AdRequestDebugMode'
        stub:
          $ref: '#/components/schemas/AdRequestDebugStubs'

    AdRequestDebugStubs:
      type: string
      description: Перечисления всех отладочных стабов
      enum:
        - success
        - notFound
        - badId
        - badInfo
        - cannotDelete
        - badSearchString

